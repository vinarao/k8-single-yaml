---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: contrail-analytics
  namespace: kube-system
  labels:
    app: contrail-analytics
spec:
  template:
    metadata:
      labels:
        app: contrail-analytics
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "opencontrail.org/controller"
                operator: Exists
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      hostNetwork: true
      containers:
      - name: contrail-analytics-api
        image: "{{ contrail_registry }}/contrail-analytics-api:{{ contrail_container_tag }}"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: env
        - configMapRef:
            name: contrail-analytics-zookeeper
        volumeMounts:
        - mountPath: /var/log/contrail
          name: analytics-logs
      - name: contrail-analytics-collector
        image: "{{ contrail_registry }}/contrail-analytics-collector:{{ contrail_container_tag }}"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: env
        - configMapRef:
            name: contrail-analytics-zookeeper
        volumeMounts:
        - mountPath: /var/log/contrail
          name: analytics-logs
      - name: contrail-analytics-alarm-gen
        image: "{{ contrail_registry }}/contrail-analytics-alarm-gen:{{ contrail_container_tag }}"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: env
        - configMapRef:
            name: contrail-analytics-zookeeper
        volumeMounts:
        - mountPath: /var/log/contrail
          name: analytics-logs
      - name: contrail-analytics-query-engine
        image: "{{ contrail_registry }}/contrail-analytics-query-engine:{{ contrail_container_tag }}"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: env
        - configMapRef:
            name: contrail-analytics-zookeeper
        volumeMounts:
        - mountPath: /var/log/contrail
          name: analytics-logs
      - name: contrail-analytics-snmp-collector
        image: "{{ contrail_registry }}/contrail-analytics-snmp-collector:{{ contrail_container_tag }}"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: env
        - configMapRef:
            name: contrail-analytics-zookeeper
        volumeMounts:
        - mountPath: /var/log/contrail
          name: analytics-logs
      - name: contrail-analytics-topology
        image: "{{ contrail_registry }}/contrail-analytics-topology:{{ contrail_container_tag }}"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: env
        - configMapRef:
            name: contrail-analytics-zookeeper
        volumeMounts:
        - mountPath: /var/log/contrail
          name: analytics-logs
      - name: contrail-analytics-nodemgr
        image: "{{ contrail_registry }}/contrail-nodemgr:{{ contrail_container_tag }}"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: env
        - configMapRef:
            name: nodemgr-config
        - configMapRef:
            name: contrail-analytics-zookeeper
        env:
        - name: NODE_TYPE
          value: analytics
        volumeMounts:
        - mountPath: /var/log/contrail
          name: analytics-logs
        - mountPath: /mnt
          name: docker-unix-socket
      volumes:
      - name: analytics-logs
        hostPath:
          path: /var/log/contrail/analytics
      - name: docker-unix-socket
        hostPath:
          path: /var/run
